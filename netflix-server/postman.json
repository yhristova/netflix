{
	"info": {
		"_postman_id": "f6206760-bf0e-44f3-bb83-7ccf58f73939",
		"name": "netflix-server",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "29169265"
	},
	"item": [
		{
			"name": "Get all movies",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"the endpoint returns the expected status code\", () => {",
							"    const expectedStatusCodes = [200,201];",
							"    pm.expect(pm.response.code).to.be.oneOf(",
							"        expectedStatusCodes,",
							"    )",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "http://localhost:4000/movies"
			},
			"response": []
		},
		{
			"name": "Create new movie",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.expect(\"the endpoint returns the expected status code\", () => {",
							"",
							"    pm.respone.to.have.status(201)",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"movie_name\": \"South Park\",\n    \"movie_src\": \"https://www.hollywoodreporter.com/wp-content/uploads/2021/10/south-park-4.jpg\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:4000/movies"
			},
			"response": []
		},
		{
			"name": "Delete movie by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"the endpoint returns the expected status code\", () => {",
							"",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": "http://localhost:4000/movies/1"
			},
			"response": []
		},
		{
			"name": "Get movie by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"the endpoint returns the expected status code\", () => {",
							"    expectedStatusCode = 200;",
							"    pm.response.to.have.status(expectedStatusCode);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "http://localhost:4000/movies/1"
			},
			"response": []
		},
		{
			"name": "Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"the endpoint returns the expected status code\", () => {",
							"    pm.response.to.have.status(201);",
							"})",
							"    "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"misho\",\n    \"password\": \"54321\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:4000/register"
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"the endpoint returns the expected status code\", () => {",
							"    pm.response.to.have.status(200);",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"misho\",\n    \"password\": \"54321\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:4000/login"
			},
			"response": []
		},
		{
			"name": "me",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"the endpoint returns the expected status code\", () => {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEsInVzZXJuYW1lIjoieW9hbmEiLCJpYXQiOjE3MDEzMzI3MDcsImV4cCI6MTcwMTM0MzUwN30.wNvxoGgeqvu2mfelRt-kGhjgkCp9yhayXNOJh-_x-0c",
						"type": "text"
					}
				],
				"url": "http://localhost:4000/me"
			},
			"response": []
		},
		{
			"name": "Invalid url",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Invalid url\", () => {",
							"    pm.response.to.have.status(404).to.have.body({\"msg\": \"page not found\"});",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "http://localhost:4000/foo"
			},
			"response": []
		},
		{
			"name": "No authorization token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"No authorization token\", () => {",
							"    pm.response.to.have.status(401).to.have.body({\"msg\":\"need a token\"})",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "http://localhost:4000/me"
			},
			"response": []
		},
		{
			"name": "Unauthorized",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Unauthorized\", () => {",
							"    pm.response.to.have.status(401).to.have.body({\"message\": \"bad token\"})",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer 12345",
						"type": "text"
					}
				],
				"url": "http://localhost:4000/me"
			},
			"response": []
		},
		{
			"name": "Get movie by wrong id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"The movie id is not found\", () => {",
							"    pm.response.to.have.status(404).to.have.body(\"Movie not found\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "http://localhost:4000/movies/8"
			},
			"response": []
		},
		{
			"name": "Delete movie by wrong id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"The movie id is not found\", () => {",
							"    pm.response.to.have.status(404).to.have.body(\"Bad id\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": "http://localhost:4000/movies/8"
			},
			"response": []
		},
		{
			"name": "Login with wrong password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Incorrect password\", () => {",
							"    pm.response.to.have.status(401).to.have.body({\"msg\": \"Incorrect password\"})",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"misho\",\n    \"password\": \"543216\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:4000/login"
			},
			"response": []
		}
	]
}